
buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
	}
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'eclipse'
apply plugin: 'com.jfrog.bintray'

repositories {
	mavenCentral()
}

group = 'org.standardout'
version = '1.5.0-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

jar {
	// include license into jar
	into 'META-INF', {
		from 'LICENSE'
	}
}

dependencies {
	compile gradleApi()
	compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1', {
		// Only needed for HTML parsing
		exclude group: 'net.sourceforge.nekohtml', module: 'nekohtml'
		// Add this dependency if you are using OAuth in HTTPBuilder or RESTClient
		exclude group: 'oauth.signpost', module: 'signpost-commonshttp4'
		// Add this dependency if you are using OAuth in HttpURLClient
		exclude group: 'oauth.signpost', module: 'signpost-core'
		
		// try to do without
		exclude group: 'com.google.appengine'
		exclude group: 'xerces', module: 'xercesImpl'
	}
	compile 'org.apache.httpcomponents:httpmime:4.5.2'
	compile localGroovy()
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.2.1'
}

// package groovydoc into a jar file
task packageJavadoc(type: Jar, dependsOn: 'groovydoc') {
	from groovydoc.destinationDir
	classifier = 'javadoc'
}

// package source into a jar file
task packageSources(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

// define artifacts for upload
artifacts {
	archives jar
	archives packageJavadoc
	archives packageSources
}

def configurePom(def pom) {
	// ensure correct artifact ID
	pom.artifactId = 'gradle-versioneye-plugin'
	
	// pom file details
	pom.project {
	   name 'gradle-versioneye-plugin'
	   packaging 'jar'
	   description 'Check your Gradle project dependencies with www.versioneye.com'
	   url 'https://github.com/stempler/gradle-versioneye-plugin'

	   scm {
		   url 'scm:git:https://github.com/stempler/gradle-versioneye-plugin.git'
		   connection 'scm:git:https://github.com/stempler/gradle-versioneye-plugin.git'
		   developerConnection 'scm:git:https://github.com/stempler/gradle-versioneye-plugin.git'
	   }

	   licenses {
		   license {
			   name 'The MIT License (MIT)'
			   url 'http://opensource.org/licenses/MIT'
			   distribution 'repo'
		   }
	   }

	   developers {
		   developer {
			   id 'stempler'
			   name 'Simon Templer'
			   email 'simon@templer.cc'
		   }
	   }
   }
}

install {
	repositories.mavenInstaller {
		// ensure correct artifact ID when installing locally
		configurePom(pom)
	}
}

// sign all artifacts
signing {
	required { gradle.taskGraph.hasTask(uploadArchives) }
	sign configurations.archives
}

uploadArchives {
	repositories {
		mavenDeployer {
			// sign artifacts before upload
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
			
			// upload to sonatype OSS (snapshot/release)
			repository(url: this.version.endsWith('-SNAPSHOT') ?
					'https://oss.sonatype.org/content/repositories/snapshots' :
					'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
				authentication(userName: this.hasProperty('sonatypeUsername') ? sonatypeUsername : '',
					password: this.hasProperty('sonatypePassword') ? sonatypePassword : '')
			}
			
			configurePom(pom)
		}
	}
}

// groovydoc task work-around

configurations {
	jansi.extendsFrom(runtime)
}
groovydoc {
	groovyClasspath = project.configurations.jansi
}
dependencies {
	jansi 'org.fusesource.jansi:jansi:1.11'
}

